<!--
    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under
    the MIT License. See LICENSE in the project root for license information.
-->
<UserControl x:ConnectionId='1' x:Class="TerminalApp.CommandPalette"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:SettingsModel="using:Microsoft.Terminal.Settings.Model"
             xmlns:Windows10version1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="using:TerminalApp"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:model="using:Microsoft.Terminal.Settings.Model"
             xmlns:mux="using:Microsoft.UI.Xaml.Controls"
             AllowFocusOnInteraction="True"
                                                                          
             IsTabStop="True"
                                          
                                                 
                                                    
                                         
             TabNavigation="Cycle"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>

            <!--
                ThemeShadow is only on 18362. This "Windows10version1903" bit
                adds it conditionally
            -->
            <Windows10version1903:ThemeShadow x:ConnectionId='2' x:Name="CommandPaletteShadow" />

            <!--  This creates an instance of our CommandKeyChordVisibilityConverter we can reference below  -->
            <local:EmptyStringVisibilityConverter x:Key="CommandKeyChordVisibilityConverter" />
            <local:EmptyStringVisibilityConverter x:Key="ParsedCommandLineTextVisibilityConverter" />
            <local:EmptyStringVisibilityConverter x:Key="ParentCommandVisibilityConverter" />
            <model:IconPathConverter x:Key="IconSourceConverter" />

            <DataTemplate x:Key="ListItemTemplate"
                                                            >
                <ListViewItem x:ConnectionId='24' HorizontalContentAlignment="Stretch"
                                                                                                           
                                                                                          />
            </DataTemplate>

            <DataTemplate x:Key="GeneralItemTemplate"
                                                            >
                <Grid x:ConnectionId='18' HorizontalAlignment="Stretch"
                      ColumnSpacing="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16" />
                        <!--  icon  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  command label  -->
                        <ColumnDefinition Width="*" />
                        <!--  key chord  -->
                        <ColumnDefinition Width="16" />
                        <!--  gutter for scrollbar  -->
                    </Grid.ColumnDefinitions>

                    <IconSourceElement x:ConnectionId='19' Grid.Column="0"
                                       Width="16"
                                       Height="16"
                                                                                                                                    />

                    <local:HighlightedTextControl x:ConnectionId='20' Grid.Column="1"
                                                  HorizontalAlignment="Left"
                                                                                               />

                    <!--
                        The block for the key chord is only visible
                        when there's actual text set as the label. See
                        CommandKeyChordVisibilityConverter for details.
                        We're setting the accessibility view on the
                        border and text block to Raw because otherwise,
                        Narrator will read out the key chord. Problem is,
                        it already did that because it was the list item's
                        "AcceleratorKey". It's redundant.
                    -->
                    <Border x:ConnectionId='21' Grid.Column="2"
                            Padding="2,0,2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            AutomationProperties.AccessibilityView="Raw"
                            Style="{ThemeResource KeyChordBorderStyle}"
                                                                                                                                               >

                        <TextBlock x:ConnectionId='22' AutomationProperties.AccessibilityView="Raw"
                                   FontSize="12"
                                   Style="{ThemeResource KeyChordTextBlockStyle}"
                                                                                  />
                    </Border>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="NestedItemTemplate"
                                                            >
                <Grid x:ConnectionId='12' HorizontalAlignment="Stretch"
                      ColumnSpacing="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16" />
                        <!--  icon  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  command label  -->
                        <ColumnDefinition Width="*" />
                        <!--  key chord  -->
                        <ColumnDefinition Width="16" />
                        <!--  gutter for scrollbar  -->
                    </Grid.ColumnDefinitions>

                    <IconSourceElement x:ConnectionId='13' Grid.Column="0"
                                       Width="16"
                                       Height="16"
                                                                                                                                    />

                    <local:HighlightedTextControl x:ConnectionId='14' Grid.Column="1"
                                                  HorizontalAlignment="Left"
                                                                                               />

                    <!--
                        The block for the key chord is only visible
                        when there's actual text set as the label. See
                        CommandKeyChordVisibilityConverter for details.
                        We're setting the accessibility view on the
                        border and text block to Raw because otherwise,
                        Narrator will read out the key chord. Problem is,
                        it already did that because it was the list item's
                        "AcceleratorKey". It's redundant.
                    -->
                    <Border x:ConnectionId='15' Grid.Column="2"
                            Padding="2,0,2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            AutomationProperties.AccessibilityView="Raw"
                            Style="{ThemeResource KeyChordBorderStyle}"
                                                                                                                                               >

                        <TextBlock x:ConnectionId='16' AutomationProperties.AccessibilityView="Raw"
                                   FontSize="12"
                                   Style="{ThemeResource KeyChordTextBlockStyle}"
                                                                                  />
                    </Border>

                    <!--  xE70E is ChevronUp. Rotated 90 degrees, it's _ChevronRight_  -->
                    <FontIcon Grid.Column="2"
                              HorizontalAlignment="Right"
                              FontFamily="Segoe MDL2 Assets"
                              Glyph="&#xE70E;">

                        <FontIcon.RenderTransform>
                            <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
                        </FontIcon.RenderTransform>
                    </FontIcon>

                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="TabItemTemplate"
                                                            >
                <Grid x:ConnectionId='4' HorizontalAlignment="Stretch"
                                                                                 
                      ColumnSpacing="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16" />
                        <!--  icon / progress  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  command label  -->
                        <ColumnDefinition Width="*" />
                        <!--  gutter for indicators  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  Indicators  -->
                        <ColumnDefinition Width="16" />
                        <!--  gutter for scrollbar  -->
                    </Grid.ColumnDefinitions>

                    <mux:ProgressRing x:ConnectionId='5' Grid.Column="0"
                                      Width="15"
                                      Height="15"
                                      MinWidth="0"
                                      MinHeight="0"
                                                                                                                                 
                                                                                                                                               
                                                                                                                                   
                                                                                                                        />

                    <IconSourceElement x:ConnectionId='6' Grid.Column="0"
                                       Width="16"
                                       Height="16"
                                                                                                                                    />

                    <local:HighlightedTextControl x:ConnectionId='7' Grid.Column="1"
                                                  HorizontalAlignment="Left"
                                                                                               />

                    <StackPanel Grid.Column="2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">

                        <FontIcon x:ConnectionId='8' Margin="0,0,8,0"
                                  FontFamily="Segoe MDL2 Assets"
                                  FontSize="12"
                                  Glyph="&#xEA8F;"
                                                                                                                         />

                        <FontIcon x:ConnectionId='9' Margin="0,0,8,0"
                                  FontFamily="Segoe MDL2 Assets"
                                  FontSize="12"
                                  Glyph="&#xE8A3;"
                                                                                                                        />

                        <FontIcon x:ConnectionId='10' x:Name="HeaderLockIcon"
                                  Margin="0,0,8,0"
                                  FontFamily="Segoe MDL2 Assets"
                                  FontSize="12"
                                  Glyph="&#xE72E;"
                                                                                                                            />

                    </StackPanel>
                </Grid>
            </DataTemplate>

            <local:PaletteItemTemplateSelector x:Key="PaletteItemTemplateSelector"
                                               GeneralItemTemplate="{StaticResource GeneralItemTemplate}"
                                               NestedItemTemplate="{StaticResource NestedItemTemplate}"
                                               TabItemTemplate="{StaticResource TabItemTemplate}" />

            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Dark">
                    <Style x:Key="CommandPaletteBackground"
                           TargetType="Grid">
                        <Setter Property="Background" Value="#333333" />
                    </Style>
                    <!--  TextBox colors !  -->
                    <SolidColorBrush x:Key="TextControlBackground"
                                     Color="#333333" />
                    <SolidColorBrush x:Key="TextBoxPlaceholderTextThemeBrush"
                                     Color="#B5B5B5" />
                    <SolidColorBrush x:Key="TextControlForeground"
                                     Color="#B5B5B5" />
                    <SolidColorBrush x:Key="TextControlBorderBrush"
                                     Color="#404040" />
                    <SolidColorBrush x:Key="TextControlButtonForeground"
                                     Color="#B5B5B5" />

                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver"
                                     Color="#404040" />
                    <SolidColorBrush x:Key="TextControlForegroundPointerOver"
                                     Color="#FFFFFF" />
                    <SolidColorBrush x:Key="TextControlBorderBrushPointerOver"
                                     Color="#404040" />
                    <SolidColorBrush x:Key="TextControlButtonForegroundPointerOver"
                                     Color="#FF4343" />

                    <SolidColorBrush x:Key="TextControlBackgroundFocused"
                                     Color="#333333" />
                    <SolidColorBrush x:Key="TextControlForegroundFocused"
                                     Color="#FFFFFF" />
                    <SolidColorBrush x:Key="TextControlBorderBrushFocused"
                                     Color="#404040" />
                    <SolidColorBrush x:Key="TextControlButtonForegroundPressed"
                                     Color="#FFFFFF" />
                    <SolidColorBrush x:Key="TextControlButtonBackgroundPressed"
                                     Color="#FF4343" />

                    <!--  KeyChordText styles  -->
                    <Style x:Key="KeyChordBorderStyle"
                           TargetType="Border">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="CornerRadius" Value="1" />
                        <Setter Property="Background" Value="{ThemeResource SystemAltMediumLowColor}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                    <Style x:Key="KeyChordTextBlockStyle"
                           TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>

                    <!--  ParsedCommandLineText styles  -->
                    <Style x:Key="ParsedCommandLineBorderStyle"
                           TargetType="Border">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="CornerRadius" Value="1" />
                        <Setter Property="Background" Value="{ThemeResource SystemAltMediumLowColor}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                    <Style x:Key="ParsedCommandLineTextBlockStyle"
                           TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Light">
                    <Style x:Key="CommandPaletteBackground"
                           TargetType="Grid">
                        <Setter Property="Background" Value="#CCCCCC" />
                    </Style>
                    <!--  TextBox colors !  -->
                    <SolidColorBrush x:Key="TextControlBackground"
                                     Color="#CCCCCC" />
                    <SolidColorBrush x:Key="TextBoxPlaceholderTextThemeBrush"
                                     Color="#636363" />
                    <SolidColorBrush x:Key="TextControlBorderBrush"
                                     Color="#636363" />
                    <SolidColorBrush x:Key="TextControlButtonForeground"
                                     Color="#636363" />

                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver"
                                     Color="#DADADA" />
                    <SolidColorBrush x:Key="TextControlBorderBrushPointerOver"
                                     Color="#636363" />
                    <SolidColorBrush x:Key="TextControlButtonForegroundPointerOver"
                                     Color="#FF4343" />

                    <SolidColorBrush x:Key="TextControlBackgroundFocused"
                                     Color="#CCCCCC" />
                    <SolidColorBrush x:Key="TextControlBorderBrushFocused"
                                     Color="#636363" />
                    <SolidColorBrush x:Key="TextControlButtonForegroundPressed"
                                     Color="#FFFFFF" />
                    <SolidColorBrush x:Key="TextControlButtonBackgroundPressed"
                                     Color="#FF4343" />

                    <!--  KeyChordText styles  -->
                    <Style x:Key="KeyChordBorderStyle"
                           TargetType="Border">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="CornerRadius" Value="1" />
                        <Setter Property="Background" Value="{ThemeResource SystemAltMediumLowColor}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                    <Style x:Key="KeyChordTextBlockStyle"
                           TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>

                    <!--  ParsedCommandLineText styles  -->
                    <Style x:Key="ParsedCommandLineBorderStyle"
                           TargetType="Border">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="CornerRadius" Value="1" />
                        <Setter Property="Background" Value="{ThemeResource SystemAltMediumLowColor}" />
                        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                    <Style x:Key="ParsedCommandLineTextBlockStyle"
                           TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <Style x:Key="CommandPaletteBackground"
                           TargetType="Grid">
                        <Setter Property="Background" Value="{ThemeResource SystemColorWindowColor}" />
                    </Style>

                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme)  -->
                    <Style x:Key="KeyChordBorderStyle"
                           TargetType="Border" />
                    <Style x:Key="KeyChordTextBlockStyle"
                           TargetType="TextBlock" />

                    <!--  ParsedCommandLineText styles (use XAML defaults for High Contrast theme)  -->
                    <Style x:Key="ParsedCommandLineBorderStyle"
                           TargetType="Border" />
                    <Style x:Key="ParsedCommandLineTextBlockStyle"
                           TargetType="TextBlock" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="6*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="8*" />
            <RowDefinition Height="2*" />
        </Grid.RowDefinitions>

        <!--
            Setting the row/col span of this shadow backdrop is a bit of a hack. In
            order to receive pointer events, an element needs to be _not_ transparent.
            However, we want to be able to eat all the clicks outside the immediate
            bounds of the command palette, and we don't want a semi-transparent overlay
            over all of the UI. Fortunately, if we make this _shadowBackdrop the size of
            the entire page, then it can be mostly transparent, and cause the root grid
            to receive clicks _anywhere_ in its bounds.
        -->

        <Grid x:ConnectionId='25' x:Name="_shadowBackdrop"
              Grid.Row="0"
              Grid.RowSpan="2"
              Grid.Column="0"
              Grid.ColumnSpan="3"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Background="Transparent" />

        <Grid x:ConnectionId='26' x:Name="_backdrop"
              Grid.Row="0"
              Grid.Column="1"
              Margin="8"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Top"
              Windows10version1903:Shadow="{StaticResource CommandPaletteShadow}"
              CornerRadius="{ThemeResource ControlCornerRadius}"
                                                      
              Style="{ThemeResource CommandPaletteBackground}">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <TextBox x:ConnectionId='27' x:Name="_searchBox"
                     Grid.Row="0"
                     Margin="8"
                     Padding="18,8,8,8"
                     IsSpellCheckEnabled="False"
                                                                                     
                     Text=""
                                                      />

            <TextBlock x:ConnectionId='28' x:Name="_prefixCharacter"
                       Grid.Row="0"
                       Margin="16,16,0,-8"
                       HorizontalAlignment="Left"
                       FontSize="14"
                                                                   
                                                                                                                                       />

            <StackPanel x:ConnectionId='29' Grid.Row="1"
                        Padding="16,0,16,4"
                        Orientation="Horizontal"
                                                                                                                                         >

                <Button x:ConnectionId='34' x:Name="_parentCommandBackButton"
                        x:Uid="ParentCommandBackButton"
                        VerticalAlignment="Center"
                        Background="Transparent"
                                                      
                        ClickMode="Press">
                    <FontIcon FontFamily="Segoe MDL2 Assets"
                              FontSize="12"
                              Glyph="&#xE76b;" />
                </Button>

                <TextBlock x:ConnectionId='35' x:Name="_parentCommandText"
                           Grid.Row="1"
                           Padding="16,0,16,4"
                           VerticalAlignment="Center"
                           FontStyle="Italic"
                                                                          />
            </StackPanel>

            <TextBlock x:ConnectionId='30' x:Name="_noMatchesText"
                       Grid.Row="1"
                       Padding="16"
                       FontStyle="Italic"
                                                                 
                       Visibility="Collapsed" />

            <Border x:ConnectionId='31' Grid.Row="1"
                    Padding="16"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Style="{ThemeResource ParsedCommandLineBorderStyle}"
                                                                                                                                                 >

                <ScrollViewer MaxHeight="200"
                              VerticalScrollBarVisibility="Auto">
                    <TextBlock x:ConnectionId='33' FontStyle="Italic"
                                                                                 
                               TextWrapping="Wrap" />
                </ScrollViewer>
            </Border>

            <ListView x:ConnectionId='32' x:Name="_filteredActionsView"
                      Grid.Row="2"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      AllowDrop="False"
                      CanReorderItems="False"
                                                                    
                                                                          
                      IsItemClickEnabled="True"
                                                  
                                                            
                      SelectionMode="Single" />

        </Grid>


    </Grid>
</UserControl>

